#include<iostream>
#include<map>
using namespace std;

int main()
{
	multimap<int, int> mp;
	mp.insert(make_pair(1000000000, 1));
	map<int, int>::iterator it;

	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		map<int, int>::iterator left = mp.begin();
		map<int, int>::iterator right = mp.end();
		int a, b;
		cin >> a >> b;
		
		it = mp.lower_bound(b);

		if (it == left)
			cout << a << " " << it->second << endl;
		else if (it == right)
		{
			//modify
			it--;
			int t = it->first;
			it = mp.lower_bound(t);
			cout << a << " " << it->second << endl;
		}
		else
		{
			//modify
			if (b == it->first)
				cout << a << " " << it->second << endl;
			else
			{
				int m1, m2, n1, n2;
				m1 = it->first;
				n1 = it->second;
				it--;
				int t = it->first;
				it = mp.lower_bound(t);
				m2 = it->first;
				n2 = it->second;
				if (m1 - b == b - m2)
				{
					//modify
					if(n1>n2)
					cout << a << " " << n2 << endl;
					else
					cout << a << " " << n1 << endl;
				}
				else if (m1 - b < b - m2)
				{
					cout << a << " " << n1 << endl;
				}
				else
				{
					cout << a << " " << n2 << endl;
				}

			}
		}
		mp.insert(make_pair(b, a));
	}
}
